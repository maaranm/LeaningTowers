package game;
//Game is extended by MineSweeper and TicTacToe
public abstract class Game {
	char[][] gameBoard; //2d array for storing the autogenerated gameboard
	char[][] playerMoves; //2d array which may be different to keep track of player moves then compare to gameBoard
	int xSize, ySize; //x and y size of the game
	int counter; //counter variable used in multiple places
	public Game(int x, int y){
		//initialize the variables 
		counter = 0;
		xSize = x; ySize = y;
		gameBoard = new char[x][y];
		playerMoves = new char[x][y];
		for(int i = 0; i<x; i++){
			for(int j = 0; j<y; j++){
				gameBoard[i][j] = 'E';
			}
		}
		for(int i = 0; i<x; i++){
			for(int j = 0; j<x; j++){
				playerMoves[i][j] = 'E';
			}
		}
	}
	
	public abstract boolean check(int playerNum); //check will be implemented differently in each of the subclasses
	
	//Ensures that the points fall within the array and does not create a array out of bounds error
	public boolean checkValid(int x, int y, char[][] pastMoves){ 
		if((x>=0 && x<xSize)&&(y>=0 && y<ySize)&&(pastMoves[x][y] == 'E'))
			return true;
		else
			return false;
	}
	
	public void reset(){ //reset's the two 2d arrays
		for(int i = 0; i<xSize; i++){
			for(int j = 0; j<ySize; j++){
				gameBoard[i][j] = 'E';
				playerMoves[i][j] = 'E';
			}
		}
	}
	
	public int distance(int xOne, int yOne, int xTwo, int yTwo){ //distance function to find distance between two points
		int distance = (int) Math.sqrt(Math.pow(xOne-xTwo, 2)+Math.pow(yOne-yTwo, 2)); //who doesn't love some good old math
		return distance;
	}
}
